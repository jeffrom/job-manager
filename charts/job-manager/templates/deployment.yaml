apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "job-manager.fullname" . }}
  labels:
    {{- include "job-manager.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ default .Values.replicaCount 1 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "job-manager.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "job-manager.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "job-manager.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 1874
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /internal/health
              port: http
          readinessProbe:
            httpGet:
              path: /internal/ready
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: LOG_JSON
              value: '1'
            - name: INSTANCE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          {{- if eq (default .Values.replicaCount 1) 1 }}
            - name: REAPER
              value: '1'
          {{- end }}
          {{- if .Values.reapAge }}
            - name: REAP_AGE
              value: {{ .Values.reapAge | quote }}
          {{- end }}
          {{- if or .Values.configSecret .Values.configMap }}
          envFrom:
          {{- if .Values.configSecret }}
          - secretRef:
              name: {{ .Values.configSecret }}
          {{- end }}
          {{- if .Values.configMap }}
          - configMapRef:
              name: {{ .Values.configMap }}
          {{- end }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
